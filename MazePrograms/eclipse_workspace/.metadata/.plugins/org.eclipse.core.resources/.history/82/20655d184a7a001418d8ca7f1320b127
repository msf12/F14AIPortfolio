
public class Maze {

	public static void main(String[] args) {

		int mazeX = 5, mazeY = 5;
		Room[][] maze = new Room[mazeX][mazeY];

		for (int i = 0; i < maze.length; i++)
		{
			for (int j = 0; j < maze[i].length; j++)
			{
				maze[i][j] = new Room();
			}
		}

		int startX = (int)(Math.random()*(mazeX-1)),
				startY = (int)(Math.random()*(mazeY-1));

		Room start = maze[startX][startY]; //start is the chosen starting room

		switch((int)(Math.random()*(start.getMaxConnectedRooms()-1))) //FIX ARRAYINDEXOUTOFBOUNDS
		{
		case 0:
			start.connectRooms(maze[startX][startY-1]);
			maze[startX][startY-1].connectRooms(start);
			break;
		case 1:
			start.connectRooms(maze[startX+1][startY]);
			maze[startX+1][startY].connectRooms(start);
			break;
		case 2:
			start.connectRooms(maze[startX][startY+1]);
			maze[startX][startY+1].connectRooms(start);
			break;
		case 3:
			start.connectRooms(maze[startX-1][startY]);
			maze[startX-1][startY].connectRooms(start);
			break;
		default:
			System.out.println("Error: invalid neighbor code");
		}
	}

}
